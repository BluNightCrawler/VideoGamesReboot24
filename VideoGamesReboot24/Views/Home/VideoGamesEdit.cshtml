@model VideoGamesReboot24.Models.ViewModels.VideoGameWithCatsAndSys

<h2>Edit</h2>
    
<form asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Video Game</h4>
        <hr/>
        @Html.ValidationSummary(true,"", new{@class = "text-danger"})
        @Html.HiddenFor(model => model.VideoGame.Id)
        @Html.HiddenFor(model => model.VideoGame.LongImagePath)
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VideoGame.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VideoGame.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VideoGame.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VideoGame.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VideoGame.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VideoGame.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.ListBoxFor(model => model.VideoGame.Categories, new MultiSelectList(Model.Categories, "Id", "Name"), new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.Systems, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.ListBoxFor(model => model.VideoGame.Systems, new MultiSelectList(Model.Systems, "Id", "Name"), new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.AgeRating, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VideoGame.AgeRating, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VideoGame.Rating, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.RatingCount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VideoGame.RatingCount, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoGame.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="">
                        @Html.EditorFor(model => model.VideoGame.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group mt-1">
                    <label class="control-label col-md-2">Image</label>
                    <div class="">
                        <input asp-for="VideoGame.ImagePath" type="hidden" value="@(Model.VideoGame.ImagePath == "" ? "$" : Model.VideoGame.ImagePath )" />
                        <input class="form-control" type="file" name="Image" accept="image/*" />
                    </div>
                </div>
            </div>
            <div class="col">
                <img class="img-thumbnail" src="@Url.Content(Model.VideoGame.ImagePath)" style="max-height: 350px" />
            </div>
        </div>
        <div class="form-group mt-3">
            <a class="btn btn-secondary" asp-controller="Home" asp-action="Catalog">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-left" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5" />
                </svg>
                Back
            </a>
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</form>








     